# Copyright (c) 2022 Gemba Advantage
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# in the Software without restriction, including without limitation the rights
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: "3"

vars:
  BINDIR: bin
  BINNAME: git-remote-codecommit
  GIT_COMMIT:
    sh: git rev-parse HEAD
  GIT_SHA:
    sh: git rev-parse --short HEAD
  GIT_BRANCH:
    sh: git branch --show-current
  LDFLAGS: >
    -X github.com/gembaadvantage/git-remote-codecommit/internal/version.version=dev-{{.GIT_SHA}}
    -X github.com/gembaadvantage/git-remote-codecommit/internal/version.gitCommit={{.GIT_COMMIT}}
    -X github.com/gembaadvantage/git-remote-codecommit/internal/version.gitBranch={{.GIT_BRANCH}}
    -X github.com/gembaadvantage/git-remote-codecommit/internal/version.buildDate={{now | date "2006-01-02T15:04:05Z07:00"}}

tasks:
  default:
    desc: Runs all of the default tasks
    cmds:
      - task: clean
      - task: lint
      - task: test
      - task: build

  build:
    desc: Build the git-remote-codecommit binary
    cmds:
      - go build -ldflags '-s -w {{.LDFLAGS}}' -o '{{.BINDIR}}/{{.BINNAME}}' ./cmd/grc

  test:
    desc: Run the tests
    cmds:
      - go test -race -vet=off -p 1 -covermode=atomic -coverprofile=coverage.out ./...

  lint:
    desc: Lint the code using golangci
    cmds:
      - golangci-lint run --timeout 5m0s

  clean:
    desc: Remove any built artifacts
    cmds:
      - rm -rf {{.BINDIR}}
